/******************************************************************************/
/**
 * \file        input.c
 *
 * \author      Paschenko Andrey <temnislav@gmail.com>
 * \mentor      Sokolov Sergey <sokloff@gmail.com>
 *
 * \date        10.02.2017
 *
 * \brief       Определение активности статусных входов.
 *
 * \details     Имеется пять статусных входов по состоянию которых, будет
 *              определяться какой из алгоритмов работы ленты будет
 *              использоваться.
 *
 *
 ******************************************************************************/

#ifndef _INPUT_H_
#define _INPUT_H_

/******************************************************************************
 *                             ЗАГОЛОВОЧНЫЕ ФАЙЛЫ
 ******************************************************************************/

#include "stm32l0xx_hal.h"

/******************************************************************************
 *                         ГЛОБАЛЬНЫЕ МАКРООПРЕДЕЛЕНИЯ
 ******************************************************************************/

#define TURN_SIGNALS    GPIO_PIN_5      // поворотники
#define STOP_SIGNALS    GPIO_PIN_6      // стоп-сигнал
#define REVERSE         GPIO_PIN_7      // задний ход
#define RUNNING_LIGHTS  GPIO_PIN_8      // дневные ходовые огни
#define CUSTOM_STATUS   GPIO_PIN_9      // кастомная настройка ленты
   
/******************************************************************************
 *                           ГЛОБАЛЬНЫЕ ТИПЫ ДАННЫХ
 ******************************************************************************/
/*
typedef struct
{
  _Bool turn_signals;
  _Bool stop_signals;
  _Bool reverse;
  _Bool running_lights;
  _Bool custom_status;
}SignalStatus_t;
*/
typedef enum
{
  turn_signals = 0,
  stop_signals,
  reverse,
  running_lights,
  custom_status
}signal_status_typedef;


/******************************************************************************
 *                        ПРОТОТИПЫ ГЛОБАЛЬНЫХ ФУНКЦИЙ
 ******************************************************************************/

void input_gpio_init(void);
void input_tim_init(void);
_Bool get_input_status(signal_status_typedef name);

#endif // _INPUT_H_

/******************************************************************************
 *                                КОНЕЦ ФАЙЛА
 ******************************************************************************/
